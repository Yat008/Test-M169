üß± Auftrag 4 ‚Äì Redmine mit Docker Compose & versteckten Passw√∂rtern
üéØ Ziel:
Redmine l√§uft mit Datenbank, Passw√∂rter sind in .env versteckt, Start erfolgt √ºber docker compose.

üß± Projektstruktur:
arduino
Kopieren
Bearbeiten
redmine-projekt/
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ docker-compose.yml
‚îî‚îÄ‚îÄ .gitignore (optional)

üõ†Ô∏è Schritt-f√ºr-Schritt-Anleitung:
‚úÖ 1. Verzeichnis anlegen

mkdir redmine-projekt
cd redmine-projekt

‚úÖ 2. .env-Datei erstellen

nano .env
Inhalt einf√ºgen:

MYSQL_ROOT_PASSWORD=rootpass
REDMINE_DB_PASSWORD=redminepass
REDMINE_PASSWORD=adminpass

‚úÖ 3. docker-compose.yml erstellen

nano docker-compose.yml
Inhalt:

yaml
Kopieren
Bearbeiten
version: '3'

services:
  db:
    image: mariadb:10.6
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: redmine
      MYSQL_USER: redmine
      MYSQL_PASSWORD: ${REDMINE_DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  redmine:
    image: redmine:5
    restart: always
    ports:
      - "3000:3000"
    environment:
      REDMINE_DB_MYSQL: db
      REDMINE_DB_PASSWORD: ${REDMINE_DB_PASSWORD}
      REDMINE_PASSWORD: ${REDMINE_PASSWORD}
    depends_on:
      - db
    volumes:
      - redmine_data:/usr/src/redmine/files

volumes:
  db_data:
  redmine_data:

‚úÖ 4. Docker Compose starten

docker compose up -d
(Das l√§dt Redmine & MariaDB und startet beides.)

‚úÖ 5. Im Browser √∂ffnen

http://localhost:3000
Login:

Benutzer: admin

Passwort: admin ‚Üí du musst ein neues setzen

‚úÖ .gitignore (optional, empfohlen)

echo ".env" > .gitignore
Damit du .env nicht versehentlich mit Git hochl√§dst.

